[
  {
    "title": "userEvent vs. fireEvent",
    "description": "리액트 테스팅 라이브러리는 UI 컴포넌트를 테스트하기 위한 도구다. 공식 문서의 소개글을 토대로 특징을 설명하면 테스트가 제품의 실제 사용 방식과 유사할수록, 테스트 결과에 대한 확신이 높아진다고 한다. 즉, 사용자가 애플리케이션을 실제로 사용하는 방식과 유사하게 테스트를 진행하면, 개발자는 예상대로 제품이 동작하는지 확인할 수 있으며, 동시에 사용자가 서비스를 이용하면서 예상치 못한 버그를 최소화할 수 있다. 테스팅 라이브러리는 DOM 노드를 쿼리하고 상호작용할 수 있는데 주로 두 가지 함수를 사용해서 테스트를 수행한다.",
    "date": "2024-01-27",
    "category": "Testing",
    "path": "2024-01-27-fireEvent-userEvent"
  },
  {
    "title": "userEvent vs. fireEvent",
    "description": "리액트 테스팅 라이브러리는 UI 컴포넌트를 테스트하기 위한 도구다. 공식 문서의 소개글을 토대로 특징을 설명하면 테스트가 제품의 실제 사용 방식과 유사할수록, 테스트 결과에 대한 확신이 높아진다고 한다. 즉, 사용자가 애플리케이션을 실제로 사용하는 방식과 유사하게 테스트를 진행하면, 개발자는 예상대로 제품이 동작하는지 확인할 수 있으며, 동시에 사용자가 서비스를 이용하면서 예상치 못한 버그를 최소화할 수 있다. 테스팅 라이브러리는 DOM 노드를 쿼리하고 상호작용할 수 있는데 주로 두 가지 함수를 사용해서 테스트를 수행한다.",
    "date": "2024-01-27",
    "category": "Testing",
    "path": "userEvent-fireEvent"
  },
  {
    "title": "userEvent vs. fireEvent",
    "description": "리액트 테스팅 라이브러리는 UI 컴포넌트를 테스트하기 위한 도구다. 공식 문서의 소개글을 토대로 특징을 설명하면 테스트가 제품의 실제 사용 방식과 유사할수록, 테스트 결과에 대한 확신이 높아진다고 한다. 즉, 사용자가 애플리케이션을 실제로 사용하는 방식과 유사하게 테스트를 진행하면, 개발자는 예상대로 제품이 동작하는지 확인할 수 있으며, 동시에 사용자가 서비스를 이용하면서 예상치 못한 버그를 최소화할 수 있다. 테스팅 라이브러리는 DOM 노드를 쿼리하고 상호작용할 수 있는데 주로 두 가지 함수를 사용해서 테스트를 수행한다.",
    "date": "2024-01-27",
    "category": "Testing",
    "path": "userEvent-fireEvent"
  },
  {
    "title": "userEvent vs. fireEvent",
    "description": "리액트 테스팅 라이브러리는 UI 컴포넌트를 테스트하기 위한 도구다. 공식 문서의 소개글을 토대로 특징을 설명하면 테스트가 제품의 실제 사용 방식과 유사할수록, 테스트 결과에 대한 확신이 높아진다고 한다. 즉, 사용자가 애플리케이션을 실제로 사용하는 방식과 유사하게 테스트를 진행하면, 개발자는 예상대로 제품이 동작하는지 확인할 수 있으며, 동시에 사용자가 서비스를 이용하면서 예상치 못한 버그를 최소화할 수 있다. 테스팅 라이브러리는 DOM 노드를 쿼리하고 상호작용할 수 있는데 주로 두 가지 함수를 사용해서 테스트를 수행한다.",
    "date": "2024-01-27",
    "category": "Testing",
    "path": "userEvent-fireEvent"
  },
  {
    "title": "userEvent vs. fireEvent",
    "description": "리액트 테스팅 라이브러리는 UI 컴포넌트를 테스트하기 위한 도구다. 공식 문서의 소개글을 토대로 특징을 설명하면 테스트가 제품의 실제 사용 방식과 유사할수록, 테스트 결과에 대한 확신이 높아진다고 한다. 즉, 사용자가 애플리케이션을 실제로 사용하는 방식과 유사하게 테스트를 진행하면, 개발자는 예상대로 제품이 동작하는지 확인할 수 있으며, 동시에 사용자가 서비스를 이용하면서 예상치 못한 버그를 최소화할 수 있다. 테스팅 라이브러리는 DOM 노드를 쿼리하고 상호작용할 수 있는데 주로 두 가지 함수를 사용해서 테스트를 수행한다.",
    "date": "2024-01-27",
    "category": "Testing",
    "path": "userEvent-fireEvent"
  },
  {
    "title": "userEvent vs. fireEvent",
    "description": "리액트 테스팅 라이브러리는 UI 컴포넌트를 테스트하기 위한 도구다. 공식 문서의 소개글을 토대로 특징을 설명하면 테스트가 제품의 실제 사용 방식과 유사할수록, 테스트 결과에 대한 확신이 높아진다고 한다. 즉, 사용자가 애플리케이션을 실제로 사용하는 방식과 유사하게 테스트를 진행하면, 개발자는 예상대로 제품이 동작하는지 확인할 수 있으며, 동시에 사용자가 서비스를 이용하면서 예상치 못한 버그를 최소화할 수 있다. 테스팅 라이브러리는 DOM 노드를 쿼리하고 상호작용할 수 있는데 주로 두 가지 함수를 사용해서 테스트를 수행한다.",
    "date": "2024-01-27",
    "category": "Testing",
    "path": "userEvent-fireEvent"
  },
  {
    "title": "userEvent vs. fireEvent",
    "description": "리액트 테스팅 라이브러리는 UI 컴포넌트를 테스트하기 위한 도구다. 공식 문서의 소개글을 토대로 특징을 설명하면 테스트가 제품의 실제 사용 방식과 유사할수록, 테스트 결과에 대한 확신이 높아진다고 한다. 즉, 사용자가 애플리케이션을 실제로 사용하는 방식과 유사하게 테스트를 진행하면, 개발자는 예상대로 제품이 동작하는지 확인할 수 있으며, 동시에 사용자가 서비스를 이용하면서 예상치 못한 버그를 최소화할 수 있다. 테스팅 라이브러리는 DOM 노드를 쿼리하고 상호작용할 수 있는데 주로 두 가지 함수를 사용해서 테스트를 수행한다.",
    "date": "2024-01-27",
    "category": "Testing",
    "path": "userEvent-fireEvent"
  },
  {
    "title": "userEvent vs. fireEvent",
    "description": "리액트 테스팅 라이브러리는 UI 컴포넌트를 테스트하기 위한 도구다. 공식 문서의 소개글을 토대로 특징을 설명하면 테스트가 제품의 실제 사용 방식과 유사할수록, 테스트 결과에 대한 확신이 높아진다고 한다. 즉, 사용자가 애플리케이션을 실제로 사용하는 방식과 유사하게 테스트를 진행하면, 개발자는 예상대로 제품이 동작하는지 확인할 수 있으며, 동시에 사용자가 서비스를 이용하면서 예상치 못한 버그를 최소화할 수 있다. 테스팅 라이브러리는 DOM 노드를 쿼리하고 상호작용할 수 있는데 주로 두 가지 함수를 사용해서 테스트를 수행한다.",
    "date": "2024-01-27",
    "category": "Testing",
    "path": "userEvent-fireEvent"
  },
  {
    "title": "userEvent vs. fireEvent",
    "description": "리액트 테스팅 라이브러리는 UI 컴포넌트를 테스트하기 위한 도구다. 공식 문서의 소개글을 토대로 특징을 설명하면 테스트가 제품의 실제 사용 방식과 유사할수록, 테스트 결과에 대한 확신이 높아진다고 한다. 즉, 사용자가 애플리케이션을 실제로 사용하는 방식과 유사하게 테스트를 진행하면, 개발자는 예상대로 제품이 동작하는지 확인할 수 있으며, 동시에 사용자가 서비스를 이용하면서 예상치 못한 버그를 최소화할 수 있다. 테스팅 라이브러리는 DOM 노드를 쿼리하고 상호작용할 수 있는데 주로 두 가지 함수를 사용해서 테스트를 수행한다.",
    "date": "2024-01-27",
    "category": "Testing",
    "path": "userEvent-fireEvent"
  },
  {
    "title": "userEvent vs. fireEvent",
    "description": "리액트 테스팅 라이브러리는 UI 컴포넌트를 테스트하기 위한 도구다. 공식 문서의 소개글을 토대로 특징을 설명하면 테스트가 제품의 실제 사용 방식과 유사할수록, 테스트 결과에 대한 확신이 높아진다고 한다. 즉, 사용자가 애플리케이션을 실제로 사용하는 방식과 유사하게 테스트를 진행하면, 개발자는 예상대로 제품이 동작하는지 확인할 수 있으며, 동시에 사용자가 서비스를 이용하면서 예상치 못한 버그를 최소화할 수 있다. 테스팅 라이브러리는 DOM 노드를 쿼리하고 상호작용할 수 있는데 주로 두 가지 함수를 사용해서 테스트를 수행한다.",
    "date": "2024-01-27",
    "category": "Testing",
    "path": "userEvent-fireEvent"
  },
  {
    "title": "userEvent vs. fireEvent",
    "description": "리액트 테스팅 라이브러리는 UI 컴포넌트를 테스트하기 위한 도구다. 공식 문서의 소개글을 토대로 특징을 설명하면 테스트가 제품의 실제 사용 방식과 유사할수록, 테스트 결과에 대한 확신이 높아진다고 한다. 즉, 사용자가 애플리케이션을 실제로 사용하는 방식과 유사하게 테스트를 진행하면, 개발자는 예상대로 제품이 동작하는지 확인할 수 있으며, 동시에 사용자가 서비스를 이용하면서 예상치 못한 버그를 최소화할 수 있다. 테스팅 라이브러리는 DOM 노드를 쿼리하고 상호작용할 수 있는데 주로 두 가지 함수를 사용해서 테스트를 수행한다.",
    "date": "2024-01-27",
    "category": "Testing",
    "path": "userEvent-fireEvent"
  }
]
